{"version":3,"sources":["util/colorsSchemes.enum.js","graphing/Graph.js","App.js","reportWebVitals.js","index.js"],"names":["cool","data","number","nodes","links","i","id","neighbors","j","push","source","target","initializeData","loadData","svg","d3","attr","selectAll","enter","append","style","Object","values","d","on","node","force","strength","x","y","Graph","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAWeA,EADF,CAAC,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WCiB5GC,EAtBiB,SAACC,GAGpB,IAFA,IAAIC,EAAQ,GACRC,EAAQ,GACHC,EAAI,EAAGA,GAAKH,EAAQG,IAAK,CAC9BF,EAAME,GAAK,CACPC,GAAID,EACJE,UAAW,IAEf,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,IACzBJ,EAAMK,KAAK,CACPC,OAAQL,EACRM,OAAQH,IAEZL,EAAME,GAAGE,UAAUE,KAAKD,GAGhC,MAAO,CACHL,QACAC,SAIKQ,CAAe,IACtBC,EAAW,WACb,IAgBMC,EAAMC,IAAU,UACjBC,KAAK,QAAS,KACdA,KAAK,SAAU,KAEhBZ,EAAQU,EAAIG,UAAU,QAAQhB,KAAKA,EAAKG,OACvCc,QACAC,OAAO,QACPC,MAAM,SAAUpB,EAAK,IACrBoB,MAAM,eAAgB,IAEvBjB,EAAQW,EAAIG,UAAU,UACrBhB,KAAKoB,OAAOC,OAAOrB,EAAKE,QAAQe,QAChCC,OAAO,UACPH,KAAK,IAAK,GACVA,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEjB,MACpBc,MAAM,OAAQpB,EAAK,IACnBwB,GAAG,SAAS,SAACD,GAAD,OApBEE,EAoBeF,OAnB9BR,IAAUU,EAAKd,QAAQS,MAAM,SAAUpB,EAAK,IAAIoB,MAAM,OAAQpB,EAAK,IAAIgB,KAAK,IAAK,GADnE,IAACS,KAsBnBC,IAAsBL,OAAOC,OAAOrB,EAAKE,QACpCuB,MAAM,OACHA,MAAkBpB,IAAG,SAACiB,GAAD,OAAOA,EAAEjB,MACzBF,MAAMH,EAAKG,QAEnBsB,MAAM,SAAUA,MAAsBC,UAAU,KAChDD,MAAM,SAAUA,IAAkB,IAAK,MACvCF,GAAG,QAzCO,WACXpB,EACKY,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEb,OAAOkB,KAC3BZ,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEb,OAAOmB,KAC3Bb,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEZ,OAAOiB,KAC3BZ,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEZ,OAAOkB,KAEhC1B,EACKa,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEK,KACpBZ,KAAK,MAAM,SAACO,GAAD,OAAOA,EAAEM,SAiDlBC,EAbf,kLAEQjB,MAFR,+BAKQ,OACI,qBAAKP,GAAG,cANpB,GAA2ByB,aC9DZC,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCMOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c658584.chunk.js","sourcesContent":["const colors = {\n    'warm': [\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],\n    'viridis': [\"#440154\",\"#482475\",\"#414487\",\"#355f8d\",\"#2a788e\",\"#21918c\",\"#22a884\",\"#44bf70\",\"#7ad151\",\"#bddf26\",\"#fde725\"],\n    'cividis': [\"#002051\",\"#0a326a\",\"#2b446e\",\"#4d566d\",\"#696970\",\"#7f7c75\",\"#948f78\",\"#ada476\",\"#caba6a\",\"#ead156\",\"#fdea45\"],\n    'inferno': [\"#000004\",\"#160b39\",\"#420a68\",\"#6a176e\",\"#932667\",\"#bc3754\",\"#dd513a\",\"#f37819\",\"#fca50a\",\"#f6d746\",\"#fcffa4\"],\n    'magma': [\"#000004\",\"#140e36\",\"#3b0f70\",\"#641a80\",\"#8c2981\",\"#b73779\",\"#de4968\",\"#f7705c\",\"#fe9f6d\",\"#fecf92\",\"#fcfdbf\"]\n}\n\nconst warm = [\"#6e40aa\",\"#963db3\",\"#bf3caf\",\"#e4419d\",\"#fe4b83\",\"#ff5e63\",\"#ff7847\",\"#fb9633\",\"#e2b72f\",\"#c6d63c\",\"#aff05b\"];\nconst plasma = [\"#0d0887\",\"#41049d\",\"#6a00a8\",\"#8f0da4\",\"#b12a90\",\"#cc4778\",\"#e16462\",\"#f2844b\",\"#fca636\",\"#fcce25\",\"#f0f921\"];\nconst cool = [\"#6e40aa\",\"#6054c8\",\"#4c6edb\",\"#368ce1\",\"#23abd8\",\"#1ac7c2\",\"#1ddfa3\",\"#30ef82\",\"#52f667\",\"#7ff658\",\"#aff05b\"];\nexport default cool;","import React, { Component } from 'react'\nimport * as force from 'd3-force';\nimport * as d3 from 'd3';\nimport cool from '../util/colorsSchemes.enum';\n\nconst initializeData = (number) => {\n    let nodes = {};\n    let links = [];\n    for (let i = 1; i <= number; i++) {\n        nodes[i] = {\n            id: i,\n            neighbors: []\n        }\n        for (let j = 1; j <= number; j++) {\n            links.push({\n                source: i,\n                target: j\n            });\n            nodes[i].neighbors.push(j);\n        }\n    }\n    return {\n        nodes,\n        links\n    };\n}\n\nconst data = initializeData(10);\nconst loadData = () => {\n    const ticked = () => {\n        links\n            .attr('x1', (d) => d.source.x)\n            .attr('y1', (d) => d.source.y)\n            .attr('x2', (d) => d.target.x)\n            .attr('y2', (d) => d.target.y);\n\n        nodes\n            .attr('cx', (d) => d.x)\n            .attr('cy', (d) => d.y)\n    };\n\n    const clickNode = (node) => {\n        d3.select(node.target).style(\"stroke\", cool[7]).style(\"fill\", cool[7]).attr('r', 4)\n    }\n\n    const svg = d3.select('#graph')\n        .attr('width', 500)\n        .attr('height', 500);\n\n    let links = svg.selectAll('line').data(data.links)\n        .enter()\n        .append('line')\n        .style(\"stroke\", cool[0])\n        .style('stroke-width', 0.2);\n\n    let nodes = svg.selectAll(\"circle\")\n        .data(Object.values(data.nodes)).enter()\n        .append('circle')\n        .attr('r', 3)\n        .attr('id', (d) => d.id)\n        .style('fill', cool[5])\n        .on('click', (d) => clickNode(d))\n\n    force.forceSimulation(Object.values(data.nodes))\n        .force('link',\n            force.forceLink().id((d) => d.id)\n                .links(data.links)\n        )\n        .force(\"charge\", force.forceManyBody().strength(-50))\n        .force(\"center\", force.forceCenter(250, 250))\n        .on(\"tick\", ticked);\n};\n\n\nexport class Graph extends Component {\n    componentDidMount() {\n        loadData();\n    }\n    render() {\n        return (\n            <svg id=\"graph\">\n\n            </svg>\n        )\n    }\n}\n\nexport default Graph\n\n","import './App.css';\nimport Graph from './graphing/Graph';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Graph />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}